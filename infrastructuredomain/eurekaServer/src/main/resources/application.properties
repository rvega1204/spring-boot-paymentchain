# Name of the application in the Spring context, useful for discovery and logging
spring.application.name=eurekaServer

# The port where the Eureka server will be running
server.port=8761

# Prevents this Eureka server from registering itself as a client to another Eureka server
eureka.client.register-with-eureka=false

# Prevents this Eureka server from fetching the registry from other Eureka servers
eureka.client.fetch-registry=false

# The minimum percentage of renewals (heartbeat signals) required for the Eureka server
# to consider itself healthy and stable. If this threshold is not met, an action is triggered.
eureka.server.renewal-percent-threshold=0.85

# Interval (in seconds) at which the client will send heartbeats to the Eureka server
# to renew its lease and signal that it is still active.
eureka.instance.lease-renewal-interval-in-seconds=10

# Enables the self-preservation mode in Eureka, which helps maintain availability during
# network partitions or large outages by reducing the risk of evicting healthy instances.
eureka.server.enable-self-preservation=true

# Disables the Spring Cloud Config client.
# This prevents the application from trying to fetch configuration from a Config Server.
spring.cloud.config.enabled=false
